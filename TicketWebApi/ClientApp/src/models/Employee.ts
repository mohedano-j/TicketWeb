/* tslint:disable */
/* eslint-disable */
/**
 * Tickets.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Ticket,
    TicketFromJSON,
    TicketFromJSONTyped,
    TicketToJSON,
} from './';

/**
 * 
 * @export
 * @interface Employee
 */
export interface Employee {
    /**
     * 
     * @type {number}
     * @memberof Employee
     */
    employeeId?: number;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    title?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Employee
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Employee
     */
    hireDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    region?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    postalCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    country?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    homePhone?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Employee
     */
    extension?: string | null;
    /**
     * 
     * @type {Array<Ticket>}
     * @memberof Employee
     */
    tickets?: Array<Ticket> | null;
}

export function EmployeeFromJSON(json: any): Employee {
    return EmployeeFromJSONTyped(json, false);
}

export function EmployeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Employee {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'employeeId': !exists(json, 'employeeId') ? undefined : json['employeeId'],
        'lastName': json['lastName'],
        'firstName': json['firstName'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'birthDate': !exists(json, 'birthDate') ? undefined : (json['birthDate'] === null ? null : new Date(json['birthDate'])),
        'hireDate': !exists(json, 'hireDate') ? undefined : (json['hireDate'] === null ? null : new Date(json['hireDate'])),
        'address': !exists(json, 'address') ? undefined : json['address'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'region': !exists(json, 'region') ? undefined : json['region'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'homePhone': !exists(json, 'homePhone') ? undefined : json['homePhone'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'tickets': !exists(json, 'tickets') ? undefined : (json['tickets'] === null ? null : (json['tickets'] as Array<any>).map(TicketFromJSON)),
    };
}

export function EmployeeToJSON(value?: Employee | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'employeeId': value.employeeId,
        'lastName': value.lastName,
        'firstName': value.firstName,
        'title': value.title,
        'birthDate': value.birthDate === undefined ? undefined : (value.birthDate === null ? null : value.birthDate.toISOString()),
        'hireDate': value.hireDate === undefined ? undefined : (value.hireDate === null ? null : value.hireDate.toISOString()),
        'address': value.address,
        'city': value.city,
        'region': value.region,
        'postalCode': value.postalCode,
        'country': value.country,
        'homePhone': value.homePhone,
        'extension': value.extension,
        'tickets': value.tickets === undefined ? undefined : (value.tickets === null ? null : (value.tickets as Array<any>).map(TicketToJSON)),
    };
}


