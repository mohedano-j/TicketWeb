/* tslint:disable */
/* eslint-disable */
/**
 * Tickets.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Employee,
    EmployeeFromJSON,
    EmployeeFromJSONTyped,
    EmployeeToJSON,
    Project,
    ProjectFromJSON,
    ProjectFromJSONTyped,
    ProjectToJSON,
    Status,
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface Ticket
 */
export interface Ticket {
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    ticketId?: number;
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    projectId?: number;
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    statusCode: string;
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    timeSpend?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    timeRemaining?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Ticket
     */
    dateCreated?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Ticket
     */
    dateUpdated?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    employeeId?: number | null;
    /**
     * 
     * @type {Employee}
     * @memberof Ticket
     */
    employee?: Employee;
    /**
     * 
     * @type {Project}
     * @memberof Ticket
     */
    project?: Project;
    /**
     * 
     * @type {Status}
     * @memberof Ticket
     */
    statusCodeNavigation?: Status;
}

export function TicketFromJSON(json: any): Ticket {
    return TicketFromJSONTyped(json, false);
}

export function TicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ticket {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ticketId': !exists(json, 'ticketId') ? undefined : json['ticketId'],
        'title': json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'statusCode': json['statusCode'],
        'timeSpend': !exists(json, 'timeSpend') ? undefined : json['timeSpend'],
        'timeRemaining': !exists(json, 'timeRemaining') ? undefined : json['timeRemaining'],
        'dateCreated': !exists(json, 'dateCreated') ? undefined : (json['dateCreated'] === null ? null : new Date(json['dateCreated'])),
        'dateUpdated': !exists(json, 'dateUpdated') ? undefined : (json['dateUpdated'] === null ? null : new Date(json['dateUpdated'])),
        'employeeId': !exists(json, 'employeeId') ? undefined : json['employeeId'],
        'employee': !exists(json, 'employee') ? undefined : EmployeeFromJSON(json['employee']),
        'project': !exists(json, 'project') ? undefined : ProjectFromJSON(json['project']),
        'statusCodeNavigation': !exists(json, 'statusCodeNavigation') ? undefined : StatusFromJSON(json['statusCodeNavigation']),
    };
}

export function TicketToJSON(value?: Ticket | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ticketId': value.ticketId,
        'title': value.title,
        'description': value.description,
        'projectId': value.projectId,
        'statusCode': value.statusCode,
        'timeSpend': value.timeSpend,
        'timeRemaining': value.timeRemaining,
        'dateCreated': value.dateCreated === undefined ? undefined : (value.dateCreated === null ? null : value.dateCreated.toISOString()),
        'dateUpdated': value.dateUpdated === undefined ? undefined : (value.dateUpdated === null ? null : value.dateUpdated.toISOString()),
        'employeeId': value.employeeId,
        'employee': EmployeeToJSON(value.employee),
        'project': ProjectToJSON(value.project),
        'statusCodeNavigation': StatusToJSON(value.statusCodeNavigation),
    };
}


