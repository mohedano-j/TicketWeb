/* tslint:disable */
/* eslint-disable */
/**
 * Tickets.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Status,
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
    Ticket,
    TicketFromJSON,
    TicketFromJSONTyped,
    TicketToJSON,
} from './';

/**
 * 
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    projectId?: number;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    projectName: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    statusCode: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    dateCreated?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    dateUpdated?: Date | null;
    /**
     * 
     * @type {Status}
     * @memberof Project
     */
    status?: Status;
    /**
     * 
     * @type {Array<Ticket>}
     * @memberof Project
     */
    tickets?: Array<Ticket> | null;
}

export function ProjectFromJSON(json: any): Project {
    return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'projectName': json['projectName'],
        'statusCode': json['statusCode'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dateCreated': !exists(json, 'dateCreated') ? undefined : (json['dateCreated'] === null ? null : new Date(json['dateCreated'])),
        'dateUpdated': !exists(json, 'dateUpdated') ? undefined : (json['dateUpdated'] === null ? null : new Date(json['dateUpdated'])),
        'status': !exists(json, 'status') ? undefined : StatusFromJSON(json['status']),
        'tickets': !exists(json, 'tickets') ? undefined : (json['tickets'] === null ? null : (json['tickets'] as Array<any>).map(TicketFromJSON)),
    };
}

export function ProjectToJSON(value?: Project | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'projectName': value.projectName,
        'statusCode': value.statusCode,
        'description': value.description,
        'dateCreated': value.dateCreated === undefined ? undefined : (value.dateCreated === null ? null : value.dateCreated.toISOString()),
        'dateUpdated': value.dateUpdated === undefined ? undefined : (value.dateUpdated === null ? null : value.dateUpdated.toISOString()),
        'status': StatusToJSON(value.status),
        'tickets': value.tickets === undefined ? undefined : (value.tickets === null ? null : (value.tickets as Array<any>).map(TicketToJSON)),
    };
}


